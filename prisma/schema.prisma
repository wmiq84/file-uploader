// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
  id       Int    @id @default(autoincrement())
  name     String // @unique
  size     Int
  upload   Int
  folder   Folder @relation(fields: [folderId], references: [id])
  folderId Int
}

model Folder {
  id        Int    @id @default(autoincrement())
  name      String 
  member    Member @relation(fields: [memberId], references: [id])
  memberId  Int
  files     File[]
}

model Member {
  id       Int      @id @default(autoincrement())
  name     String
  password String 
  status   Boolean  @default(false)
  folders  Folder[]  
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   // @db.MediumText 
  expiresAt DateTime
}

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }
